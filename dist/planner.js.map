{"version":3,"file":"planner.js","mappings":";;;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ,uFAAuF;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClJ+C;AACR;AAChC;AACP;AACA,gCAAgC,wDAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,gDAAQ;AACzC,uCAAuC,gDAAQ;AAC/C,uCAAuC,gDAAQ;AAC/C,qCAAqC,gDAAQ;AAC7C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBqE;AACb;AACjD;AACP;AACA;AACA;AACA,gCAAgC,gEAAe;AAC/C,8BAA8B,8DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iEAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7EkD;AAC3C;AACP;AACA;AACA;AACA;AACA,wBAAwB,8DAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBkD;AAClD;AACA;AACA,4BAA4B,8DAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1EO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3ByC;AAClC;AACP;AACA,mBAAmB,kDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAS;AAChC,uBAAuB,kDAAS;AAChC,uBAAuB,kDAAS;AAChC,uBAAuB,kDAAS;AAChC,uBAAuB,kDAAS;AAChC,uBAAuB,kDAAS;AAChC;AACA;AACA;AACA;;;;;;UCnBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNgE;AACwB;AAC3B;AACP;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,eAAe,eAAe;AACtF,0IAA0I;AAC1I;AACA;AACA,8BAA8B,+DAAa;AAC3C,iCAAiC,sEAAgB;AACjD;AACA;AACA,6BAA6B,yEAAiB;AAC9C,oBAAoB,iGAA0B;AAC9C;AACA;AACA,gC","sources":["webpack:///../build/common/common.js","webpack:///../build/common/linked_list.js","webpack:///../build/eisenhower/eisenhower_matrix_task_editor.js","webpack:///../build/eisenhower/indexed_tasks.js","webpack:///../build/eisenhower/task_zone.js","webpack:///../build/misc/github_page_opener.js","webpack:///../build/misc/style_switcher.js","webpack:///../build/tasks/basic_task.js","webpack:///../build/tasks/basic_task_provider.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../build/main.js"],"sourcesContent":["export function getElementById(id) {\n    const element = document.getElementById(id);\n    if (element === null || element === undefined) {\n        throw new MediaError;\n    }\n    return element;\n}\nclass TemplateCloner {\n    constructor() {\n        this.cachedTemplates = new Map;\n    }\n    cloneTemplateById(templateId) {\n        const template = this.getTemplate(templateId);\n        return this.cloneTemplate(template);\n    }\n    getTemplate(templateId) {\n        if (this.cachedTemplates.has(templateId)) {\n            return this.getTemplateFromCache(templateId);\n        }\n        else {\n            return this.getAndCacheTemplateFromDocument(templateId);\n        }\n    }\n    getTemplateFromCache(templateId) {\n        return this.cachedTemplates.get(templateId);\n    }\n    getAndCacheTemplateFromDocument(templateId) {\n        const template = getElementById(templateId);\n        this.cachedTemplates.set(templateId, template);\n        return template;\n    }\n    cloneTemplate(template) {\n        const clone = template.cloneNode(true);\n        clone.id = \"\";\n        clone.classList.remove(TemplateCloner.templateClass);\n        return clone;\n    }\n}\nTemplateCloner.templateClass = \"template\";\nvar templateCloner = new TemplateCloner;\nexport function cloneTemplateById(id) {\n    return templateCloner.cloneTemplateById(id);\n}\n//# sourceMappingURL=common.js.map","class LinkedListItem {\n    constructor(value) {\n        this.value = value;\n    }\n    getNext() {\n        return this.next;\n    }\n    setNext(next) {\n        this.next = next;\n    }\n    insertAfterSelf(next) {\n        next.setNext(this.next);\n        this.next = next;\n    }\n    getValue() {\n        return this.value;\n    }\n    contains(value) {\n        return this.value == value;\n    }\n}\nexport class BasicLinkedList {\n    constructor() {\n        this.head = undefined;\n    }\n    pushBack(value) {\n        var _a;\n        const newItem = new LinkedListItem(value);\n        if (this.head === undefined) {\n            this.head = newItem;\n        }\n        else {\n            (_a = this.getBackItem()) === null || _a === void 0 ? void 0 : _a.setNext(newItem);\n        }\n    }\n    pushFront(value) {\n        const newItem = new LinkedListItem(value);\n        this.insertAsFirst(newItem);\n    }\n    pop(value) {\n        var _a;\n        if ((_a = this.head) === null || _a === void 0 ? void 0 : _a.contains(value)) {\n            this.popFront();\n        }\n        else {\n            this.popFromNotFirst(value);\n        }\n    }\n    popFront() {\n        var _a;\n        this.head = (_a = this.head) === null || _a === void 0 ? void 0 : _a.getNext();\n    }\n    popFromNotFirst(value) {\n        const prev = this.findItemWithNextValue(value);\n        const removed = prev === null || prev === void 0 ? void 0 : prev.getNext();\n        prev === null || prev === void 0 ? void 0 : prev.setNext(removed === null || removed === void 0 ? void 0 : removed.getNext());\n    }\n    front() {\n        var _a;\n        return (_a = this.head) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    back() {\n        var _a;\n        return (_a = this.getBackItem()) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    getBackItem() {\n        let last = undefined;\n        this.forEachItem(item => { last = item; return true; });\n        return last;\n    }\n    contains(value) {\n        return this.findItemWithValue(value) !== undefined;\n    }\n    insertAfter(value, after) {\n        const newItem = new LinkedListItem(value);\n        const item = this.findItemWithValue(after);\n        item === null || item === void 0 ? void 0 : item.insertAfterSelf(newItem);\n    }\n    insertBefore(value, before) {\n        const newItem = new LinkedListItem(value);\n        if (this.head === undefined || this.head.contains(before)) {\n            this.insertAsFirst(newItem);\n        }\n        else {\n            this.insertBeforeNotFirst(newItem, before);\n        }\n    }\n    insertAsFirst(newItem) {\n        newItem.setNext(this.head);\n        this.head = newItem;\n    }\n    insertBeforeNotFirst(newItem, before) {\n        let prev = this.findItemWithNextValue(before);\n        prev === null || prev === void 0 ? void 0 : prev.insertAfterSelf(newItem);\n    }\n    findItemWithValue(value) {\n        return this.findItem(item => item.contains(value));\n    }\n    findItemWithNextValue(value) {\n        return this.findItem(item => { var _a; return (_a = item.getNext()) === null || _a === void 0 ? void 0 : _a.contains(value); });\n    }\n    findItem(condition) {\n        let foundItem = undefined;\n        this.forEachItem((item) => {\n            if (condition(item)) {\n                foundItem = item;\n                return false;\n            }\n            return true;\n        });\n        return foundItem;\n    }\n    forEach(callbackfn) {\n        this.forEachItem(item => callbackfn(item.getValue()));\n    }\n    forEachItem(callbackfn) {\n        if (this.head === undefined)\n            return;\n        this.doForEachItem(callbackfn);\n    }\n    doForEachItem(callbackfn) {\n        let item = this.head;\n        do {\n            const cont = callbackfn(item);\n            if (cont === false)\n                break;\n            item = item.getNext();\n        } while (item);\n    }\n    iterate() {\n        return new BasicLinkedListIterator(this.head);\n    }\n}\nclass BasicLinkedListIterator {\n    constructor(head) {\n        this.current = head;\n    }\n    hasNext() {\n        return this.current !== undefined;\n    }\n    getNext() {\n        const value = this.current.getValue();\n        this.current = this.current.getNext();\n        return value;\n    }\n}\n//# sourceMappingURL=linked_list.js.map","import { IndexedTasks } from \"./indexed_tasks\";\nimport { TaskZone } from \"./task_zone\";\nexport class EisenhowerMatrixTaskEditor {\n    constructor(taskProvider) {\n        this.managedTasks = new IndexedTasks;\n        this.zones = new Map;\n        this.taskProvider = taskProvider;\n        this.initTasks();\n        this.initZones();\n        this.displayInitializedTasks();\n    }\n    initTasks() {\n        const tasks = this.taskProvider.restoreTasks();\n        this.indexRestoredTasks(tasks);\n    }\n    indexRestoredTasks(tasks) {\n        tasks.forEach((task) => {\n            this.managedTasks.addTask(task);\n        });\n    }\n    initZones() {\n        this.zones.set('do', new TaskZone(\"task_zone_do\"));\n        this.zones.set('schedule', new TaskZone(\"task_zone_schedule\"));\n        this.zones.set('delegate', new TaskZone(\"task_zone_delegate\"));\n        this.zones.set('delete', new TaskZone(\"task_zone_delete\"));\n    }\n    displayInitializedTasks() {\n        this.managedTasks.forEach((task, index) => {\n            this.displayTask(task, index);\n        });\n    }\n    displayTask(task, index) {\n        const zone = this.zones.get(task.getSection());\n        zone === null || zone === void 0 ? void 0 : zone.addTask(index, task);\n    }\n}\n//# sourceMappingURL=eisenhower_matrix_task_editor.js.map","export class IndexedTasks {\n    constructor() {\n        this.tasks = new Map;\n        this.lastTaskIndex = 0;\n    }\n    addTask(task) {\n        const newTaskIndex = ++this.lastTaskIndex;\n        this.tasks.set(newTaskIndex, task);\n        return newTaskIndex;\n    }\n    getTask(index) {\n        return this.tryGetTask(index);\n    }\n    tryGetTask(index) {\n        return this.tasks.get(index);\n    }\n    removeTask(index) {\n        this.tasks.delete(index);\n    }\n    forEach(callbackfn) {\n        this.tasks.forEach(callbackfn);\n    }\n}\n//# sourceMappingURL=indexed_tasks.js.map","import { cloneTemplateById, getElementById } from \"../common/common\";\nimport { BasicLinkedList } from \"../common/linked_list\";\nexport class TaskZone {\n    constructor(taskBoxElementId) {\n        this.displayedTasks = new Map;\n        this.displayedElements = new Map;\n        this.elementOrder = new BasicLinkedList;\n        this.taskBoxElement = getElementById(taskBoxElementId);\n    }\n    addTask(id, task) {\n        this.displayedTasks.set(id, task);\n        this.generateElementForTask(id, task);\n        this.displayElement(id);\n    }\n    generateElementForTask(id, task) {\n        const newElement = cloneTemplateById(TaskZone.taskTemplateId);\n        newElement.id = this.getElementIdForTask(id);\n        newElement.innerHTML = task.getName();\n        this.displayedElements.set(id, newElement);\n    }\n    getElementIdForTask(id) {\n        return `task_${id}`;\n    }\n    displayElement(id) {\n        const wasInserted = this.tryInsertInMiddle(id);\n        if (wasInserted === false) {\n            this.insertAtEnd(id);\n        }\n    }\n    tryInsertInMiddle(id) {\n        const orderIndex = this.getTask(id).getOrderIndex();\n        const iterator = this.elementOrder.iterate();\n        while (iterator.hasNext()) {\n            const contestedTaskId = iterator.getNext();\n            if (this.shouldInsertBefore(orderIndex, contestedTaskId)) {\n                this.insertBefore(id, contestedTaskId);\n                return true;\n            }\n        }\n        return false;\n    }\n    shouldInsertBefore(index, contestedTaskId) {\n        const contestedOrderIndex = this.getTask(contestedTaskId).getOrderIndex();\n        return index < contestedOrderIndex;\n    }\n    insertBefore(insertedTask, before) {\n        const insertedElement = this.getElementForTask(insertedTask);\n        const beforeElement = this.getElementForTask(before);\n        this.taskBoxElement.insertBefore(insertedElement, beforeElement);\n        this.elementOrder.insertBefore(insertedTask, before);\n    }\n    insertAtEnd(taskId) {\n        this.elementOrder.pushBack(taskId);\n        const insertedElement = this.getElementForTask(taskId);\n        this.taskBoxElement.appendChild(insertedElement);\n    }\n    removeTask(id) {\n        var _a;\n        (_a = this.tryGetElementForTask(id)) === null || _a === void 0 ? void 0 : _a.remove();\n        this.displayedTasks.delete(id);\n        this.displayedElements.delete(id);\n        this.elementOrder.pop(id);\n    }\n    getTask(id) {\n        return this.tryGetTask(id);\n    }\n    tryGetTask(id) {\n        return this.displayedTasks.get(id);\n    }\n    getElementForTask(id) {\n        return this.tryGetElementForTask(id);\n    }\n    tryGetElementForTask(id) {\n        return this.displayedElements.get(id);\n    }\n}\nTaskZone.taskTemplateId = \"task_template\";\n//# sourceMappingURL=task_zone.js.map","import { getElementById } from \"../common/common\";\nexport class GithubPageOpener {\n    constructor() {\n        this.button = this.getButton();\n    }\n    getButton() {\n        const element = getElementById(GithubPageOpener.buttonId);\n        element.addEventListener('click', ev => this.onClick());\n        return element;\n    }\n    onClick() {\n        var _a;\n        (_a = window.open(GithubPageOpener.sourceUrl, '_blank')) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n}\nGithubPageOpener.buttonId = \"get_code_button\";\nGithubPageOpener.sourceUrl = \"https://github.com/f3d0rov/planner\";\n//# sourceMappingURL=github_page_opener.js.map","import { getElementById } from \"../common/common\";\nclass StyleModeState {\n    constructor(buttonSymbolId, styleClassName) {\n        this.buttonSymbol = getElementById(buttonSymbolId);\n        this.styleClassName = styleClassName;\n    }\n    hideButtonSymbol() {\n        this.buttonSymbol.classList.add(StyleModeState.hiddenSymbolClass);\n    }\n    showButtonSymbol() {\n        this.buttonSymbol.classList.remove(StyleModeState.hiddenSymbolClass);\n    }\n    applyClassToBody() {\n        document.body.classList.add(this.styleClassName);\n        console.log(`Style class set to ${this.styleClassName}`);\n    }\n    removeClassFromBody() {\n        document.body.classList.remove(this.styleClassName);\n    }\n}\nStyleModeState.hiddenSymbolClass = \"nodisplay\";\nexport class StyleSwitcher {\n    constructor() {\n        this.styles = new Array;\n        this.currentStyleIndex = 0;\n        this.lastSwitchToken = 0;\n        this.switchStyleButton = this.setupStyleButton();\n        this.setDefaultStyles();\n        this.setStyle(0);\n    }\n    setupStyleButton() {\n        const button = getElementById(StyleSwitcher.switchStyleButtonId);\n        button.addEventListener('click', ev => this.setNextStyle());\n        return button;\n    }\n    setDefaultStyles() {\n        this.styles.push(new StyleModeState('dark_mode_button', 'dark_mode'));\n        this.styles.push(new StyleModeState('light_mode_button', 'light_mode'));\n    }\n    setNextStyle() {\n        this.setBodySwitchingStyleClass();\n        this.removeStyle(this.currentStyleIndex);\n        this.currentStyleIndex = this.getNextStyleIndex();\n        this.setStyle(this.currentStyleIndex);\n    }\n    getNextStyleIndex() {\n        return (this.currentStyleIndex + 1) % this.styles.length;\n    }\n    removeStyle(index) {\n        const style = this.styles.at(index);\n        style.removeClassFromBody();\n    }\n    setStyle(index) {\n        const style = this.styles.at(index);\n        style.applyClassToBody();\n        style.hideButtonSymbol();\n        const nextStyle = this.styles.at(this.getNextStyleIndex());\n        nextStyle.showButtonSymbol();\n    }\n    setBodySwitchingStyleClass() {\n        document.body.classList.add(StyleSwitcher.bodySwitchingStyle);\n        const token = Math.random();\n        this.lastSwitchToken = token;\n        setTimeout(() => this.resetBodySwitchingStyleClass(token), 1000 * StyleSwitcher.bodySwitchingStyleTimeSec);\n    }\n    resetBodySwitchingStyleClass(token) {\n        if (this.lastSwitchToken === token) {\n            document.body.classList.remove(StyleSwitcher.bodySwitchingStyle);\n        }\n    }\n}\nStyleSwitcher.switchStyleButtonId = \"switch_style_button\";\nStyleSwitcher.bodySwitchingStyle = \"switching_style\";\nStyleSwitcher.bodySwitchingStyleTimeSec = 1;\n//# sourceMappingURL=style_switcher.js.map","export class BasicTask {\n    constructor(name, section = \"unset\") {\n        this.name = \"\";\n        this.section = \"unset\";\n        this.index = 0;\n        this.name = name;\n        this.section = section;\n    }\n    getName() {\n        return this.name;\n    }\n    setName(name) {\n        this.name = name;\n    }\n    getSection() {\n        return this.section;\n    }\n    setSection(section) {\n        this.section = section;\n    }\n    getOrderIndex() {\n        return this.index;\n    }\n    setOrderIndex(index) {\n        this.index = index;\n    }\n}\n//# sourceMappingURL=basic_task.js.map","import { BasicTask } from \"./basic_task\";\nexport class BasicTaskProvider {\n    createNewTask() {\n        return new BasicTask(\"\", \"unset\");\n    }\n    restoreTasks() {\n        return this.getInitialTasks();\n    }\n    getInitialTasks() {\n        const tasks = new Array;\n        tasks.push(new BasicTask(\"Move tasks by dragging them with your mouse\", \"do\"));\n        tasks.push(new BasicTask(\"Create new tasks by moving the \\\"+\\\" button onto the board\", \"do\"));\n        tasks.push(new BasicTask(\"Complete tasks by moving them to the \\\"Done\\\" box\", \"schedule\"));\n        tasks.push(new BasicTask(\"Remove tasks by moving them to the \\\"Remove\\\" box\", \"delegate\"));\n        tasks.push(new BasicTask(\"Double-click a task to edit it\", \"delegate\"));\n        tasks.push(new BasicTask(\"Visit the project's repository by clicking the button at the top of the page\", \"delete\"));\n        return tasks;\n    }\n}\n//# sourceMappingURL=basic_task_provider.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { BasicTaskProvider } from \"./tasks/basic_task_provider\";\nimport { EisenhowerMatrixTaskEditor } from \"./eisenhower/eisenhower_matrix_task_editor\";\nimport { GithubPageOpener } from \"./misc/github_page_opener\";\nimport { StyleSwitcher } from \"./misc/style_switcher\";\nfunction main() {\n    logWelcomeMessage();\n    initMiscTools();\n    initTasks();\n}\nfunction logWelcomeMessage() {\n    console.log(\"%cPlanning Zen%c 1.0\", \"color:#8aee8a; font-size:32px;\", \"color: red;\");\n    console.log(\"Check out the source code, report issues and offer improvements at %chttps://github.com/f3d0rov/planner%c\", \"color:green;\");\n}\nfunction initMiscTools() {\n    const styleSwitcher = new StyleSwitcher;\n    const githubPageOpener = new GithubPageOpener();\n}\nfunction initTasks() {\n    const taskProvider = new BasicTaskProvider;\n    const app = new EisenhowerMatrixTaskEditor(taskProvider);\n}\nwindow.addEventListener('load', main);\n//# sourceMappingURL=main.js.map"],"names":[],"sourceRoot":""}