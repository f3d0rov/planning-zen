{"version":3,"file":"planner.js","mappings":";;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACP0C;AAC1C;AACA;AACA,4BAA4B,uDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UC1EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsD;AACtD;AACA;AACA,4BAA4B,+DAAa;AACzC;AACA;AACA,gC","sources":["webpack:///../build/common.js","webpack:///../build/light_mode_switcher.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../build/main.js"],"sourcesContent":["export function getElementById(id) {\n    const element = document.getElementById(id);\n    if (element === null || element === undefined) {\n        throw new MediaError;\n    }\n    return element;\n}\n//# sourceMappingURL=common.js.map","import { getElementById } from \"./common\";\nclass StyleModeState {\n    constructor(buttonSymbolId, styleClassName) {\n        this.buttonSymbol = getElementById(buttonSymbolId);\n        this.styleClassName = styleClassName;\n    }\n    hideButtonSymbol() {\n        this.buttonSymbol.classList.add(StyleModeState.hiddenSymbolClass);\n    }\n    showButtonSymbol() {\n        this.buttonSymbol.classList.remove(StyleModeState.hiddenSymbolClass);\n    }\n    applyClassToBody() {\n        document.body.classList.add(this.styleClassName);\n        console.log(`Style class set to ${this.styleClassName}`);\n    }\n    removeClassFromBody() {\n        document.body.classList.remove(this.styleClassName);\n    }\n}\nStyleModeState.hiddenSymbolClass = \"nodisplay\";\nexport class StyleSwitcher {\n    constructor() {\n        this.styles = new Array;\n        this.currentStyleIndex = 0;\n        this.lastSwitchToken = 0;\n        this.switchStyleButton = this.setupStyleButton();\n        this.setDefaultStyles();\n        this.setStyle(0);\n    }\n    setupStyleButton() {\n        const button = getElementById(StyleSwitcher.switchStyleButtonId);\n        button.addEventListener('click', ev => this.setNextStyle());\n        return button;\n    }\n    setDefaultStyles() {\n        this.styles.push(new StyleModeState('dark_mode_button', 'dark_mode'));\n        this.styles.push(new StyleModeState('light_mode_button', 'light_mode'));\n    }\n    setNextStyle() {\n        this.setBodySwitchingStyleClass();\n        this.removeStyle(this.currentStyleIndex);\n        this.currentStyleIndex = this.getNextStyleIndex();\n        this.setStyle(this.currentStyleIndex);\n    }\n    getNextStyleIndex() {\n        return (this.currentStyleIndex + 1) % this.styles.length;\n    }\n    removeStyle(index) {\n        const style = this.styles.at(index);\n        style.removeClassFromBody();\n    }\n    setStyle(index) {\n        const style = this.styles.at(index);\n        style.applyClassToBody();\n        style.hideButtonSymbol();\n        const nextStyle = this.styles.at(this.getNextStyleIndex());\n        nextStyle.showButtonSymbol();\n    }\n    setBodySwitchingStyleClass() {\n        document.body.classList.add(StyleSwitcher.bodySwitchingStyle);\n        const token = Math.random();\n        this.lastSwitchToken = token;\n        setTimeout(() => this.resetBodySwitchingStyleClass(token), 1000 * StyleSwitcher.bodySwitchingStyleTimeSec);\n    }\n    resetBodySwitchingStyleClass(token) {\n        if (this.lastSwitchToken === token) {\n            document.body.classList.remove(StyleSwitcher.bodySwitchingStyle);\n        }\n    }\n}\nStyleSwitcher.switchStyleButtonId = \"switch_style_button\";\nStyleSwitcher.bodySwitchingStyle = \"switching_style\";\nStyleSwitcher.bodySwitchingStyleTimeSec = 1;\n//# sourceMappingURL=light_mode_switcher.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { StyleSwitcher } from \"./light_mode_switcher\";\nfunction main() {\n    console.log(\"%cPlanning Zen\", \"color:green, font-size:64px\");\n    var styleSwitcher = new StyleSwitcher;\n}\nwindow.addEventListener('load', main);\n//# sourceMappingURL=main.js.map"],"names":[],"sourceRoot":""}